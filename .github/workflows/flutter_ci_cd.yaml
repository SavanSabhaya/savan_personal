name: Flutter CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Check if APK exists
        run: |
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "‚úÖ APK file exists at the expected location."
          else
            echo "‚ùå APK file not found. Searching for APK files..."
            find build -name "*.apk" -type f
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 5
          if-no-files-found: error

  deploy-android:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: release-apk
          path: ./apk

      - name: Display structure of downloaded APK
        run: |
          echo "Current directory structure:"
          ls -la ./
          echo "APK directory contents:"
          ls -la ./apk || echo "APK directory not found!"

      # üîß Optional: Uncomment and configure Firebase/AppCenter/etc.
      # - name: Deploy to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #     groups: testers
      #     file: ./apk/app-release.apk

  deploy-ios:
    needs: build
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (No Code Sign)
        run: flutter build ios --release --no-codesign

      # üîß Optional: Add steps for code signing and upload to TestFlight if needed
